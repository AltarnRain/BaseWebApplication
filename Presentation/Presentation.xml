<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Presentation</name>
    </assembly>
    <members>
        <member name="T:Presentation.Attributes.ApiRouteAttribute">
            <summary>
            Defines an /api/route.
            Extends RouteAttribute and sets the 'template' as the 'Name'.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.RouteAttribute" />
        </member>
        <member name="M:Presentation.Attributes.ApiRouteAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Presentation.Attributes.ApiRouteAttribute" /> class.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="T:Presentation.Controllers.ApiController">
            <summary>
            Controller for API calls.
            </summary>
        </member>
        <member name="M:Presentation.Controllers.ApiController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Application.Services.SayService)">
            <summary>
            Initializes a new instance of the <see cref="T:Presentation.Controllers.ApiController" /> class.
            </summary>
            <param name="webHostEnvironment">The web host environment.</param>
            <param name="sayService">The say service.</param>
        </member>
        <member name="M:Presentation.Controllers.ApiController.SayHello(System.String)">
            <summary>
            Calls the API.
            </summary>
            <param name="name">The name.</param>
            <returns>
            String response.
            </returns>
        </member>
        <member name="M:Presentation.Controllers.ApiController.SayGoodbye(System.String)">
            <summary>
            Calls the API.
            </summary>
            <param name="name">The name.</param>
            <returns>
            String response.
            </returns>
        </member>
        <member name="T:Presentation.Controllers.BaseController">
            <summary>
            Base class for all controllers.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:Presentation.Controllers.BaseController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Presentation.Controllers.BaseController"/> class.
            </summary>
            <param name="webHostEnvironment">The web host environment.</param>
        </member>
        <member name="P:Presentation.Controllers.BaseController.WebHostEnvironment">
            <summary>
            Gets the web host environment.
            </summary>
        </member>
        <member name="M:Presentation.Controllers.BaseController.Respond``1(``0)">
            <summary>
            Responds with the specified value.
            </summary>
            <typeparam name="T">Any type.</typeparam>
            <param name="value">The value.</param>
            <returns>A response model that contains the value.</returns>
        </member>
        <member name="T:Presentation.Program">
            <summary>
            Entry point.
            </summary>
        </member>
        <member name="M:Presentation.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Presentation.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creates the host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns>An IHostBuilder.</returns>
        </member>
        <member name="T:Presentation.DIContainer">
            <summary>
            DI Container.
            </summary>
        </member>
        <member name="F:Presentation.DIContainer.serviceProvider">
            <summary>
            The service provider.
            </summary>
        </member>
        <member name="M:Presentation.DIContainer.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Presentation.DIContainer"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Presentation.DIContainer.GetLogger``1">
            <summary>
            Gets the logger.
            </summary>
            <typeparam name="T">Anything.</typeparam>
            <returns>An ILogger.</returns>
        </member>
        <member name="M:Presentation.DIContainer.GetWebHostEnvironment">
            <summary>
            Gets the web host environment.
            </summary>
            <returns>The Webhost environment.</returns>
        </member>
        <member name="T:Presentation.Extensions.ExtensionClass">
            <summary>
            Register class.
            </summary>
        </member>
        <member name="M:Presentation.Extensions.ExtensionClass.ConfigureDependencyInjection(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="T:Presentation.Startup">
            <summary>
            Starts the web application.
            </summary>
        </member>
        <member name="M:Presentation.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Presentation.Startup"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
        </member>
        <member name="P:Presentation.Startup.Configuration">
            <summary>
            Gets the configuration.
            </summary>
        </member>
        <member name="M:Presentation.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:Presentation.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">The application.</param>
            <param name="env">The env.</param>
        </member>
        <member name="T:Models.Base.BaseResponse">
            <summary>
            Base for all data transfer objects (aka, models).
            </summary>
        </member>
        <member name="T:Models.ResponseModel`1">
            <summary>
            Wrapper class for all responses. The client only accepts JSON objects.
            </summary>
            <typeparam name="T">Any type.</typeparam>
        </member>
        <member name="P:Models.ResponseModel`1.Value">
            <summary>
            Gets or sets value we want to return to the client.
            </summary>
        </member>
    </members>
</doc>
